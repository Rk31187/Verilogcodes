///////////////////////////////////////////////////updown counter////////////////////////////////////////////////////////////////////



**************************************************RTL Code******************************************************************************



module updown(input clk,rst,sel,output reg [3:0]out);

always@(posedge clk)
begin
	if(!rst)
	out<=0;
	else if(sel&&out<8)
	out<=out+1'b1;
	else if(sel&&out==8)
	out<=0;
	else if(~sel&&out>0)
	out<=out-1'b1;
	else if(~sel&&out==0)
	out<=8;
	else
	out<=out;
end
endmodule








*******************************************************************Tb************************************************************************



module updowncounter_8bit_tb();
reg clk,rst,sel;
wire [3:0]out;

updown DUT(clk,rst,sel,out);

initial
	begin
	clk=1'b0;
	forever
	#5 clk=~clk;
	end


task reset;
	begin
@(negedge clk)
rst=1'b0;
@(negedge clk)
rst=1'b1;
	end
endtask

task t1(input i);
	begin
@(negedge clk)
	sel=i;
	end
endtask

initial
	begin
	reset;
	t1(1);
	#100;
	t1(0);
	#150 ;
	end
	
initial	
$monitor($time,"input clk=%b,rst=%b,sel=%b, output out=%b",clk,rst,sel,out);
initial
	begin
	#1000 $finish;
	end
endmodule


