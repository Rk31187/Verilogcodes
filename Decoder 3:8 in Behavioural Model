////////////////////////////////////////////////              Decoder 3:8 using Parameter in Behavioural Model            /////////////////////////////////////////////////////////////




*******************************************************            RTL code           ******************************************************************************


// decoder using enable and parameter
module dec3_8(input [2:0]i,input e ,output reg [7:0]y);
parameter          s0=3'b000;
parameter			 s1=3'b001;
parameter			 s2=3'b010;
parameter			 s3=3'b011;
parameter			 s4=3'b100;
parameter			 s5=3'b101;
parameter			 s6=3'b110;
parameter			 s7=3'b111;
	
	always@(i,e)
		begin
			if(e==1) 
				begin
				case(i)
				s0 :y=8'b00000001;
				s1 :y=8'b00000010;
				s2 :y=8'b00000100;
				s3 :y=8'b00001000;
				s4 :y=8'b00010000;
				s5 :y=8'b00100000;
				s6 :y=8'b01000000;
				s7 :y=8'b10000000;
				default :y=8'b0;
				endcase
			end
		else 
		begin
		y=8'b0;
		end
		end 
endmodule

				
	


***********************************************************************        TB code                 *******************************************************************







module dec3_8_tb();
 reg [2:0]i;
 reg e;
 wire [7:0]y;
	integer j;
 dec3_8 DUT(i,e,y);
  
task initialize;
	begin
	{i,e}=0;
	end
endtask

task t1;
			begin
	  for(j=0;j<8;j=j+1)
			begin
			{i}=j;
			e=1'b1;
			#10;
			end
		end
endtask

initial
	begin
	initialize;
	t1;
	end
initial
$monitor("input i=%b,input e=%b,output y=%b",i,e,y);
initial
begin
#3000 $finish;
end
endmodule
	
		
		
