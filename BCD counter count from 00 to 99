///////////////////////////////////////////////////// BCD counter count from 00 to 99/////////////////////////////////////////////////////////





****************************************************************RTL code**************************************************************************************
module bcd(input clk,rst, output reg [3:0]q1,q2);
always@(posedge clk)
begin
if(rst)
q1<=4'b0;
else
begin
if(q1==4'b1001)
q1<=4'b0;
else
q1<=q1+1'b1;
end
end

always@(posedge clk)
begin
if(rst)
q2<=4'b0;
else
begin
if((q1==4'b1001) && (q2<4'b1001))
q2<=(q2+1'b1);
else if(q1==4'b1001 &&q2==4'b1001)
q2<=4'b0;
end
end
endmodule









*******************************************************************Test Bench*********************************************************************
module bcd_tb();
reg rst,clk;
wire [3:0]q1,q2;

bcd DUT(clk,rst,q1,q2);

initial
	begin
clk=1'b0;
forever
#5 clk=~clk;
end

task reset;
	begin
	@(negedge clk)
	rst=1'b1;
	@(negedge clk)
	rst=1'b0;
	end
endtask

task initialize;
	begin
	rst=1'b1;
	end
endtask

initial
	begin
	initialize;
	reset;
end

initial
$monitor($time,"input clk=%b,rst=%b,output q1=%b,q2=%b",clk,rst,q1,q2);
initial
	begin
	#1000 $finish;
	end
endmodule
	

